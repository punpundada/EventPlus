
services:
  db:
    image: postgres:16.3-alpine3.20
    container_name: eventplus
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: .
      dockerfile: dockerfile
    container_name: event_plus_backend
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
    volumes:
      - ./backend:/app
      # - ./backend/event_images:/app/event_images
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py runserver 0.0.0.0:8000 
  
  frontend:
    container_name: event_plus_frontend
    build:
      context: ./frontend
      dockerfile: dockerfile
      # target: development
    environment:
      VITE_BASE_URL: http://backend/api
    ports:
      - "3000:3000"